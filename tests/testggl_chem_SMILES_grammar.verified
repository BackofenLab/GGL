
==============  BEGIN TEST  ==================
==============================================
         ggl::chem::SMILES_grammar  
==============================================


 convert SMILES string 0 :

 SMILES = 'CC(C)C(=O)O'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (C)  -->  | 1 (-) |
     3 (C)  -->  | 1 (-) | 4 (=) | 5 (-) |
     4 (O)  -->  | 3 (=) |
     5 (O)  -->  | 3 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (C)  -->  | 1 (-) |
     3 (C)  -->  | 1 (-) | 4 (=) | 5 (-) |
     4 (O)  -->  | 3 (=) |
     5 (O)  -->  | 3 (-) |


 convert SMILES string 1 :

 SMILES = 'n1ccccc1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (n)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (n)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) |


 convert SMILES string 2 :

 SMILES = '[nH]1cccc1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (n)  -->  | 1 (:) | 4 (:) | 5 (-) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) |
     5 (H)  -->  | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (n)  -->  | 1 (:) | 4 (:) | 5 (-) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) |
     5 (H)  -->  | 0 (-) |


 convert SMILES string 3 :

 SMILES = '[CH3][CH]=[CH][CH3]'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 4 (-) | 5 (-) | 6 (-) |
     1 (C)  -->  | 0 (-) | 2 (=) | 7 (-) |
     2 (C)  -->  | 1 (=) | 3 (-) | 8 (-) |
     3 (C)  -->  | 2 (-) | 9 (-) | 10 (-) | 11 (-) |
     4 (H)  -->  | 0 (-) |
     5 (H)  -->  | 0 (-) |
     6 (H)  -->  | 0 (-) |
     7 (H)  -->  | 1 (-) |
     8 (H)  -->  | 2 (-) |
     9 (H)  -->  | 3 (-) |
    10 (H)  -->  | 3 (-) |
    11 (H)  -->  | 3 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 4 (-) | 5 (-) | 6 (-) |
     1 (C)  -->  | 0 (-) | 2 (=) | 7 (-) |
     2 (C)  -->  | 1 (=) | 3 (-) | 8 (-) |
     3 (C)  -->  | 2 (-) | 9 (-) | 10 (-) | 11 (-) |
     4 (H)  -->  | 0 (-) |
     5 (H)  -->  | 0 (-) |
     6 (H)  -->  | 0 (-) |
     7 (H)  -->  | 1 (-) |
     8 (H)  -->  | 2 (-) |
     9 (H)  -->  | 3 (-) |
    10 (H)  -->  | 3 (-) |
    11 (H)  -->  | 3 (-) |


 convert SMILES string 4 :

 SMILES = 'C=12CC1C2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 5 :

 SMILES = 'C=12CC1C-2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 6 :

 SMILES = 'C=1-2CC1C2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 7 :

 SMILES = 'C=1-2CC1C-2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 8 :

 SMILES = 'C12CC=1C2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 9 :

 SMILES = 'C12CC=1C-2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 10 :

 SMILES = 'C1-2CC=1C2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 11 :

 SMILES = 'C1-2CC=1C-2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 12 :

 SMILES = 'C=1-2CC=1C-2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 13 :

 SMILES = 'C1=2CC2C1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 14 :

 SMILES = 'C-1=2CC2C1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 15 :

 SMILES = 'C1=2CC2C-1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 16 :

 SMILES = 'C-1=2CC2C-1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 17 :

 SMILES = 'C12CC=2C1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 18 :

 SMILES = 'C-12CC=2C1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 19 :

 SMILES = 'C12CC=2C-1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 20 :

 SMILES = 'C-12CC=2C-1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 21 :

 SMILES = 'C-1=2CC=2C-1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 2 (=) | 3 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 0 (=) | 3 (-) |
     3 (C)  -->  | 2 (-) | 0 (-) |


 convert SMILES string 22 :

 SMILES = 'O[As]'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (O)  -->  | 1 (-) |
     1 (As)  -->  | 0 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (O)  -->  | 1 (-) |
     1 (As)  -->  | 0 (-) |


 convert SMILES string 23 :

 SMILES = '[H][C]12CCC3=Cc4oncc4C[C]3(C)[C]1([H])CC[C]1(C)[C]2([H])CC[C]1(O)C#C'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (H)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 14 (-) | 20 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) | 12 (-) |
     5 (C)  -->  | 4 (=) | 6 (-) |
     6 (c)  -->  | 5 (-) | 7 (:) | 10 (:) |
     7 (o)  -->  | 6 (:) | 8 (:) |
     8 (n)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 6 (:) | 11 (-) |
    11 (C)  -->  | 10 (-) | 12 (-) |
    12 (C)  -->  | 11 (-) | 4 (-) | 13 (-) | 14 (-) |
    13 (C)  -->  | 12 (-) |
    14 (C)  -->  | 12 (-) | 1 (-) | 15 (-) | 16 (-) |
    15 (H)  -->  | 14 (-) |
    16 (C)  -->  | 14 (-) | 17 (-) |
    17 (C)  -->  | 16 (-) | 18 (-) |
    18 (C)  -->  | 17 (-) | 19 (-) | 20 (-) | 24 (-) |
    19 (C)  -->  | 18 (-) |
    20 (C)  -->  | 18 (-) | 1 (-) | 21 (-) | 22 (-) |
    21 (H)  -->  | 20 (-) |
    22 (C)  -->  | 20 (-) | 23 (-) |
    23 (C)  -->  | 22 (-) | 24 (-) |
    24 (C)  -->  | 23 (-) | 18 (-) | 25 (-) | 26 (-) |
    25 (O)  -->  | 24 (-) |
    26 (C)  -->  | 24 (-) | 27 (#) |
    27 (C)  -->  | 26 (#) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (H)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 14 (-) | 20 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) | 12 (-) |
     5 (C)  -->  | 4 (=) | 6 (-) |
     6 (c)  -->  | 5 (-) | 7 (:) | 10 (:) |
     7 (o)  -->  | 6 (:) | 8 (:) |
     8 (n)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 6 (:) | 11 (-) |
    11 (C)  -->  | 10 (-) | 12 (-) |
    12 (C)  -->  | 11 (-) | 4 (-) | 13 (-) | 14 (-) |
    13 (C)  -->  | 12 (-) |
    14 (C)  -->  | 12 (-) | 1 (-) | 15 (-) | 16 (-) |
    15 (H)  -->  | 14 (-) |
    16 (C)  -->  | 14 (-) | 17 (-) |
    17 (C)  -->  | 16 (-) | 18 (-) |
    18 (C)  -->  | 17 (-) | 19 (-) | 20 (-) | 24 (-) |
    19 (C)  -->  | 18 (-) |
    20 (C)  -->  | 18 (-) | 1 (-) | 21 (-) | 22 (-) |
    21 (H)  -->  | 20 (-) |
    22 (C)  -->  | 20 (-) | 23 (-) |
    23 (C)  -->  | 22 (-) | 24 (-) |
    24 (C)  -->  | 23 (-) | 18 (-) | 25 (-) | 26 (-) |
    25 (O)  -->  | 24 (-) |
    26 (C)  -->  | 24 (-) | 27 (#) |
    27 (C)  -->  | 26 (#) |


 convert SMILES string 24 :

 SMILES = 'CC(O)C(O)C1CNc2nc(N)[nH]c(=O)c2N1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (O)  -->  | 1 (-) |
     3 (C)  -->  | 1 (-) | 4 (-) | 5 (-) |
     4 (O)  -->  | 3 (-) |
     5 (C)  -->  | 3 (-) | 6 (-) | 16 (-) |
     6 (C)  -->  | 5 (-) | 7 (-) |
     7 (N)  -->  | 6 (-) | 8 (-) |
     8 (c)  -->  | 7 (-) | 9 (:) | 15 (:) |
     9 (n)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (-) | 12 (:) |
    11 (N)  -->  | 10 (-) |
    12 (n)  -->  | 10 (:) | 13 (:) | 17 (-) |
    13 (c)  -->  | 12 (:) | 14 (=) | 15 (:) |
    14 (O)  -->  | 13 (=) |
    15 (c)  -->  | 13 (:) | 8 (:) | 16 (-) |
    16 (N)  -->  | 15 (-) | 5 (-) |
    17 (H)  -->  | 12 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (O)  -->  | 1 (-) |
     3 (C)  -->  | 1 (-) | 4 (-) | 5 (-) |
     4 (O)  -->  | 3 (-) |
     5 (C)  -->  | 3 (-) | 6 (-) | 16 (-) |
     6 (C)  -->  | 5 (-) | 7 (-) |
     7 (N)  -->  | 6 (-) | 8 (-) |
     8 (c)  -->  | 7 (-) | 9 (:) | 15 (:) |
     9 (n)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (-) | 12 (:) |
    11 (N)  -->  | 10 (-) |
    12 (n)  -->  | 10 (:) | 13 (:) | 17 (-) |
    13 (c)  -->  | 12 (:) | 14 (=) | 15 (:) |
    14 (O)  -->  | 13 (=) |
    15 (c)  -->  | 13 (:) | 8 (:) | 16 (-) |
    16 (N)  -->  | 15 (-) | 5 (-) |
    17 (H)  -->  | 12 (-) |


 convert SMILES string 25 :

 SMILES = 'N#CSCc1ccccc1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (N)  -->  | 1 (#) |
     1 (C)  -->  | 0 (#) | 2 (-) |
     2 (S)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (c)  -->  | 3 (-) | 5 (:) | 9 (:) |
     5 (c)  -->  | 4 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 4 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (N)  -->  | 1 (#) |
     1 (C)  -->  | 0 (#) | 2 (-) |
     2 (S)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (c)  -->  | 3 (-) | 5 (:) | 9 (:) |
     5 (c)  -->  | 4 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 4 (:) |


 convert SMILES string 26 :

 SMILES = 'CN(C)c1ccc2nc3ccc(cc3[s+]c2c1)N(C)C'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (N)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (C)  -->  | 1 (-) |
     3 (c)  -->  | 1 (-) | 4 (:) | 16 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) | 15 (:) |
     7 (n)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) | 13 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 12 (:) | 17 (-) |
    12 (c)  -->  | 11 (:) | 13 (:) |
    13 (c)  -->  | 12 (:) | 8 (:) | 14 (:) |
    14 (s+)  -->  | 13 (:) | 15 (:) |
    15 (c)  -->  | 14 (:) | 6 (:) | 16 (:) |
    16 (c)  -->  | 15 (:) | 3 (:) |
    17 (N)  -->  | 11 (-) | 18 (-) | 19 (-) |
    18 (C)  -->  | 17 (-) |
    19 (C)  -->  | 17 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) |
     1 (N)  -->  | 0 (-) | 2 (-) | 3 (-) |
     2 (C)  -->  | 1 (-) |
     3 (c)  -->  | 1 (-) | 4 (:) | 16 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) | 15 (:) |
     7 (n)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) | 13 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 12 (:) | 17 (-) |
    12 (c)  -->  | 11 (:) | 13 (:) |
    13 (c)  -->  | 12 (:) | 8 (:) | 14 (:) |
    14 (s+)  -->  | 13 (:) | 15 (:) |
    15 (c)  -->  | 14 (:) | 6 (:) | 16 (:) |
    16 (c)  -->  | 15 (:) | 3 (:) |
    17 (N)  -->  | 11 (-) | 18 (-) | 19 (-) |
    18 (C)  -->  | 17 (-) |
    19 (C)  -->  | 17 (-) |


 convert SMILES string 27 :

 SMILES = 'C1=CC=[N](C=C1)[Ag++]([N]1=CC=CC=C1)([N]1=CC=CC=C1)[N]1=CC=CC=C1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (=) | 5 (-) |
     1 (C)  -->  | 0 (=) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (=) |
     3 (N)  -->  | 2 (=) | 4 (-) | 6 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |
     6 (Ag+2)  -->  | 3 (-) | 7 (-) | 13 (-) | 19 (-) |
     7 (N)  -->  | 6 (-) | 8 (=) | 12 (-) |
     8 (C)  -->  | 7 (=) | 9 (-) |
     9 (C)  -->  | 8 (-) | 10 (=) |
    10 (C)  -->  | 9 (=) | 11 (-) |
    11 (C)  -->  | 10 (-) | 12 (=) |
    12 (C)  -->  | 11 (=) | 7 (-) |
    13 (N)  -->  | 6 (-) | 14 (=) | 18 (-) |
    14 (C)  -->  | 13 (=) | 15 (-) |
    15 (C)  -->  | 14 (-) | 16 (=) |
    16 (C)  -->  | 15 (=) | 17 (-) |
    17 (C)  -->  | 16 (-) | 18 (=) |
    18 (C)  -->  | 17 (=) | 13 (-) |
    19 (N)  -->  | 6 (-) | 20 (=) | 24 (-) |
    20 (C)  -->  | 19 (=) | 21 (-) |
    21 (C)  -->  | 20 (-) | 22 (=) |
    22 (C)  -->  | 21 (=) | 23 (-) |
    23 (C)  -->  | 22 (-) | 24 (=) |
    24 (C)  -->  | 23 (=) | 19 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (=) | 5 (-) |
     1 (C)  -->  | 0 (=) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (=) |
     3 (N)  -->  | 2 (=) | 4 (-) | 6 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |
     6 (Ag+2)  -->  | 3 (-) | 7 (-) | 13 (-) | 19 (-) |
     7 (N)  -->  | 6 (-) | 8 (=) | 12 (-) |
     8 (C)  -->  | 7 (=) | 9 (-) |
     9 (C)  -->  | 8 (-) | 10 (=) |
    10 (C)  -->  | 9 (=) | 11 (-) |
    11 (C)  -->  | 10 (-) | 12 (=) |
    12 (C)  -->  | 11 (=) | 7 (-) |
    13 (N)  -->  | 6 (-) | 14 (=) | 18 (-) |
    14 (C)  -->  | 13 (=) | 15 (-) |
    15 (C)  -->  | 14 (-) | 16 (=) |
    16 (C)  -->  | 15 (=) | 17 (-) |
    17 (C)  -->  | 16 (-) | 18 (=) |
    18 (C)  -->  | 17 (=) | 13 (-) |
    19 (N)  -->  | 6 (-) | 20 (=) | 24 (-) |
    20 (C)  -->  | 19 (=) | 21 (-) |
    21 (C)  -->  | 20 (-) | 22 (=) |
    22 (C)  -->  | 21 (=) | 23 (-) |
    23 (C)  -->  | 22 (-) | 24 (=) |
    24 (C)  -->  | 23 (=) | 19 (-) |


 convert SMILES string 28 :

 SMILES = 'c1ccccc1c2ccccc2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) | 6 (:) |
     6 (c)  -->  | 5 (:) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |


 convert SMILES string 29 :

 SMILES = 'c1ccccc1-c2ccccc2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) | 6 (-) |
     6 (c)  -->  | 5 (-) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) | 6 (-) |
     6 (c)  -->  | 5 (-) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |


 convert SMILES string 30 :

 SMILES = 'c1ccc(cc1)-c2ccccc2'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) | 6 (-) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) |
     6 (c)  -->  | 3 (-) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 5 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (c)  -->  | 2 (:) | 4 (:) | 6 (-) |
     4 (c)  -->  | 3 (:) | 5 (:) |
     5 (c)  -->  | 4 (:) | 0 (:) |
     6 (c)  -->  | 3 (-) | 7 (:) | 11 (:) |
     7 (c)  -->  | 6 (:) | 8 (:) |
     8 (c)  -->  | 7 (:) | 9 (:) |
     9 (c)  -->  | 8 (:) | 10 (:) |
    10 (c)  -->  | 9 (:) | 11 (:) |
    11 (c)  -->  | 10 (:) | 6 (:) |


 convert SMILES string 31 :

 SMILES = 'c1cc[se]c1'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 4 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (se)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c)  -->  | 1 (:) | 4 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (se)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) |


 convert SMILES string 32 :

 SMILES = '[c:13]1cc[se]c1C[Br:5]'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c:13)  -->  | 1 (:) | 4 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (se)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) | 5 (-) |
     5 (C)  -->  | 4 (-) | 6 (-) |
     6 (Br:5)  -->  | 5 (-) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (c:13)  -->  | 1 (:) | 4 (:) |
     1 (c)  -->  | 0 (:) | 2 (:) |
     2 (c)  -->  | 1 (:) | 3 (:) |
     3 (se)  -->  | 2 (:) | 4 (:) |
     4 (c)  -->  | 3 (:) | 0 (:) | 5 (-) |
     5 (C)  -->  | 4 (-) | 6 (-) |
     6 (Br:5)  -->  | 5 (-) |


 convert SMILES string 33 :

 SMILES = 'C^C'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (^) |
     1 (C)  -->  | 0 (^) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (^) |
     1 (C)  -->  | 0 (^) |


 convert SMILES string 34 :

 SMILES = '[Fe+2](^O)^O'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (Fe+2)  -->  | 1 (^) | 2 (^) |
     1 (O)  -->  | 0 (^) |
     2 (O)  -->  | 0 (^) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (Fe+2)  -->  | 1 (^) | 2 (^) |
     1 (O)  -->  | 0 (^) |
     2 (O)  -->  | 0 (^) |


 convert SMILES string 35 :

 SMILES = 'C(C%10CC=%10)=C'

 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 4 (=) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (=) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 1 (=) |
     4 (C)  -->  | 0 (=) |

 --> call SMILES_grammar::parse(..) 
 ==> SMILES Parser succeeded
 ==> resulting graph :

     0 (C)  -->  | 1 (-) | 4 (=) |
     1 (C)  -->  | 0 (-) | 2 (-) | 3 (=) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 1 (=) |
     4 (C)  -->  | 0 (=) |


===============  TEST END  ===================
==============================================

