
==============  BEGIN TEST  ==================
==============================================
                ggl::Rule  
==============================================


 == RULE ==



=============================================

  0(A) -1- 1(B)               0(E) -1- 1(B)
   |                           |        |
   2               ==>         4        3
   |                           |        |
  2(C)                        2(C)     3(D)

=============================================



 Rule ID  : ''

 LeftSide :
nodes = 0, 1, 2, 

 Context :
nodes = 1, 2, 

 RightSide :
nodes = 0, 1, 2, 3, 

 == LEFT_SIDE_PATTERN ==

     0 (A)  -->  | 1 (-1-) | 2 (-2-) |
     1 (B)  -->  | 0 (-1-) |
     2 (C)  -->  | 0 (-2-) |

 symmetry breaking rules = 

 == RIGHT_SIDE_PATTERN ==

     0 (E)  -->  | 1 (-1-) | 2 (-4-) |
     1 (B)  -->  | 0 (-1-) | 3 (-3-) |
     2 (C)  -->  | 0 (-4-) |
     3 (D)  -->  | 1 (-3-) |

 == CHECK CONSISTENCY ==

-> isConsistent() = false
The rule is not consistent because :
 + contains no ruleID information 

 == CONNECTED COMPONENTS LEFT_SIDE_PATTERN ==

--> connectedComponents( ls ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
--> ls.getComponentLabeling() : 
 0 = 0
 1 = 0
 2 = 0
--> ls.getFirstOfEachComponent() : 0 

 == CONNECTED COMPONENTS RIGHT_SIDE_PATTERN ==

--> connectedComponents( rs ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
 3 = 0

 == RULE ==



=============================================

  3(D) -1- 1(B)               3(E) -1- 1(B) 
   |      /                    |        |   
   2    3           ==>        4        3   
   |  /                        |        |   
  2(C) -0- 0(A)               2(C)     4(D) 

=============================================



 Rule ID  : 'rule2'

 LeftSide :
nodes = 0, 1, 2, 3, 

 Context :
nodes = 1, 2, 

 RightSide :
nodes = 1, 2, 3, 4, 

 == LEFT_SIDE_PATTERN ==

     0 (A)  -->  | 2 (-0-) |
     1 (B)  -->  | 2 (-3-) | 3 (-1-) |
     2 (C)  -->  | 0 (-0-) | 1 (-3-) | 3 (-2-) |
     3 (D)  -->  | 1 (-1-) | 2 (-2-) |

 symmetry breaking rules = 

 == RIGHT_SIDE_PATTERN ==

     0 (B)  -->  | 2 (-1-) | 3 (-3-) |
     1 (C)  -->  | 2 (-4-) |
     2 (E)  -->  | 0 (-1-) | 1 (-4-) |
     3 (D)  -->  | 0 (-3-) |

 == CHECK CONSISTENCY ==

-> isConsistent() = true

 == CONNECTED COMPONENTS LEFT_SIDE_PATTERN ==

--> connectedComponents( ls ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
 3 = 0
--> ls.getComponentLabeling() : 
 0 = 0
 1 = 0
 2 = 0
 3 = 0
--> ls.getFirstOfEachComponent() : 0 

 == CONNECTED COMPONENTS RIGHT_SIDE_PATTERN ==

--> connectedComponents( rs ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
 3 = 0

 == RULE ==



=============================================

  2(D) -1- 1(B)               2(C)     1(B) 
                                        |   
                    ==>                 3   
                                        |   
           0(A)                        0(A) 

=============================================



 Rule ID  : 'rule3'

 LeftSide :
nodes = 0, 1, 2, 

 Context :
nodes = 0, 1, 

 RightSide :
nodes = 0, 1, 2, 

 == LEFT_SIDE_PATTERN ==

     0 (A)  -->  |
     1 (B)  -->  | 2 (-1-) |
     2 (D)  -->  | 1 (-1-) |

 symmetry breaking rules = 

 == RIGHT_SIDE_PATTERN ==

     0 (A)  -->  | 1 (-3-) |
     1 (B)  -->  | 0 (-3-) |
     2 (C)  -->  |

 == CHECK CONSISTENCY ==

-> isConsistent() = true

 == CONNECTED COMPONENTS LEFT_SIDE_PATTERN ==

--> connectedComponents( ls ) = 2
--> component labeling :
 0 = 0
 1 = 1
 2 = 1
--> ls.getComponentLabeling() : 
 0 = 0
 1 = 1
 2 = 1
--> ls.getFirstOfEachComponent() : 0 1 

 == CONNECTED COMPONENTS RIGHT_SIDE_PATTERN ==

--> connectedComponents( rs ) = 2
--> component labeling :
 0 = 0
 1 = 0
 2 = 1

 == RULE ==



=============================================

  3(H) - 0(C) - 1(C)  ==> 3(H) - 0(C) - 1(C) = 2(O) 

=============================================



 Rule ID  : 'rule4'

 LeftSide :
nodes = 0, 1, 3, 

 Context :
nodes = 0, 1, 3, 

 RightSide :
nodes = 0, 1, 2, 3, 

 == LEFT_SIDE_PATTERN ==

     0 (C)  -->  | 2 (-) | 1 (-) |
     1 (C)  -->  | 0 (-) |
     2 (H)  -->  | 0 (-) |

 symmetry breaking rules = 

 == RIGHT_SIDE_PATTERN ==

     0 (C)  -->  | 3 (-) | 1 (-) |
     1 (C)  -->  | 0 (-) | 2 (=) |
     2 (O)  -->  | 1 (=) |
     3 (H)  -->  | 0 (-) |

 == CHECK CONSISTENCY ==

-> isConsistent() = true

 == CONNECTED COMPONENTS LEFT_SIDE_PATTERN ==

--> connectedComponents( ls ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
--> ls.getComponentLabeling() : 
 0 = 0
 1 = 0
 2 = 0
--> ls.getFirstOfEachComponent() : 0 

 == CONNECTED COMPONENTS RIGHT_SIDE_PATTERN ==

--> connectedComponents( rs ) = 1
--> component labeling :
 0 = 0
 1 = 0
 2 = 0
 3 = 0

===============  TEST END  ===================
==============================================

