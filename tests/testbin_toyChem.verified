==============  BEGIN TEST  ==================
==============================================
               bin/toyChem
==============================================

 --> checking help

 => usage:	toyChem [...optional parameters]

 => complete parameterlist:

  [-rules=..] Chemical rules input : 'STDIN' when to read from standard input, or a
         ':'-separated list of file names (use -ruleExample for a rule sample)
         type=str 
  [-smiles=..] SMILES input : 'STDIN' when to read from standard input, or a
         ':'-separated list of file names.
         type=str 
  [-mols=..] Molecules input in GML format : 'STDIN' when to read from standard
         input, or a ':'-separated list of file names.
         type=str 
  [-groups=..] Predefined molecule groups abbreviated in rules and molecules in GML
         format : 'STDIN' when to read from standard input, or a ':'-separated
         list of file names.
         type=str 
  [-iter=..] Number of rule application iterations
         type=int   default="1"
  [-allowAllIntra] If present, all intra-molecular reactions are allowed, i.e. the
         application of rules with 2 or more unconnected components in the left
         side patter can applied to one molecule, otherwise NOT.
         type=bool
  [-showNew] If present, all new molecules per iteration are printed.
         type=bool
  [-out=..] Output file name or 'STDOUT' when to write to standard output
         type=str   default="STDOUT"
  [-outMode=..] Output mode : (S)MILES string, (A)djacency list, (G)ML graph
         representations, (R)eactions, or reaction (N)etwork
         type=char  default="S"
  [-rate=..] Reaction rate calculation mode : (N)o rate calculation but transition
         state shown, (A)rrhenius law-based [see 'rateArrT'], (M)OPAC-based, or
         (J)AGGUAR-based
         type=char  default="N"
  [-rateArrT=..] Arrhenius rate generalized temperature parameter T for rate =
         exp(-deltaE/T); The energy difference 'deltaE' computation uses the
         decomposition approach by Jankowski et al. (2008)
         type=dbl   default="50"
  [-aromaticity=..] The aromaticity perception model to be used : (M)arvin general model,
         (O)penBabel model, or (N)o aromaticity perception.
         type=char  default="M"
  [-noInputCorrection] Dont correct the input molecules (aromaticity perception, proton
         filling, ...)
         type=bool
  [-noInputCheck] Dont check the input molecules for consistency (atom/bond label, ...)
         type=bool
  [-noRuleCheck] Dont check the rules for consistency
         type=bool
  [-help] Displays help on all parameters
         type=bool
  [-ruleExample] Displays an example for the chemical reaction GML encoding
         type=bool
  [-graphExample] Displays an example for the molecule graph GML encoding
         type=bool
  [-v  ] Verbose output
         type=bool
  [-version] Version information
         type=bool


 => informations:


Reads a list of molecules and chemical rules and applies therules to generate
new molecules.

Rules have to be in GML format (use '-ruleExample' for an example).
It is possible to specify the molecules in GML format as well.


 => usage:	toyChem [...optional parameters]


 --> running Diels-Alder reaction
 --> parameter =  -smiles=dielsalder/da1.smi:dielsalder/da2.smi -rules=dielsalder/da_rule.gml -iter=2 -outMode=R -v

 # LOAD AROMATICITY MODELS ... DONE

 # PARSE RULES ... DONE

 # CHECK RULES ... DONE

 # PARSE INPUT ... DONE

 # CORRECT INPUT ... DONE

 # CHECK INPUT ... DONE

 ######## PARSED AND AVAILABLE GROUPS #######

 ######## PARSED RULES #######

 RULE : Diels-Alder reaction


 == LEFT_SIDE_PATTERN ==

     0 (C)  -->  | 5 (=) |
     1 (C)  -->  | 2 (=) |
     2 (C)  -->  | 1 (=) |
     3 (C)  -->  | 4 (=) |
     4 (C)  -->  | 3 (=) | 5 (-) |
     5 (C)  -->  | 0 (=) | 4 (-) |

 number of constraints = 4
 + MC_NoEdge 
   from 0
   to   2
 + MC_NoEdge 
   from 3
   to   1
 + MC_NoEdge 
   from 0
   to   1
 + MC_NoEdge 
   from 2
   to   3

 == RIGHT_SIDE_PATTERN ==

     0 (C)  -->  | 1 (-) | 5 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |

 number of nodes with copy-and-paste operations = 0



 transition state of Diels-Alder reaction = [C:1]1=[C:1][C:1]=[C:1]=[C:1]=[C:1]1

 ###### PARSED MOLECULES #####

 C=C
 C=CC=C


 0. iteration done : molecules = 2

 new molecules :
 C=C
 C=CC=C


 1. iteration done : molecules = 4

 new molecules :
 C1CCC=CC1
 C=CC1CCC=CC1


 2. iteration done : molecules = 7

 new molecules :
 C1CCC2CC=CCC2C1
 C=CC1CCC2CC=CCC2C1
 C1CC(CC=C1)C2CCC=CC2




 ######## FINAL SMILES ######


 number of produced reactions = 5

 Produced Reactions :

Diels-Alder reaction : C1CCC=CC1.C=CC=C>[CH2]1[CH2][CH2][CH:1]2[CH2:1]=[CH:1]=[CH:1]=[CH2:1][CH:1]=2[CH2]1>C1CCC2CC=CCC2C1 : nan
Diels-Alder reaction : C=C.C=CC=C>[CH2:1]1=[CH2:1][CH2:1]=[CH:1]=[CH:1]=[CH2:1]1>C1CCC=CC1 : nan
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>[CH2]1[CH2][CH]([CH2][CH]=[CH]1)[CH:1]2=[CH2:1][CH2:1]=[CH:1]=[CH:1]=[CH2:1]2>C1CC(CC=C1)C2CCC=CC2 : nan
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>[CH2]=[CH][CH]1[CH2][CH2][CH:1]2[CH2:1]=[CH:1]=[CH:1]=[CH2:1][CH:1]=2[CH2]1>C=CC1CCC2CC=CCC2C1 : nan
Diels-Alder reaction : C=CC=C.C=CC=C>[CH2]=[CH][CH:1]1=[CH2:1][CH2:1]=[CH:1]=[CH:1]=[CH2:1]1>C=CC1CCC=CC1 : nan

 --> running Diels-Alder reaction
 --> parameter =  -mols=dielsalder/da1.gml:dielsalder/da2.gml -rules=dielsalder/da_rule.gml -iter=2 -outMode=R -rate=A -v

 # LOAD AROMATICITY MODELS ... DONE

 # PARSE RULES ... DONE

 # CHECK RULES ... DONE

 # PARSE INPUT ... DONE

 # CORRECT INPUT ... DONE

 # CHECK INPUT ... DONE

 ######## PARSED AND AVAILABLE GROUPS #######

 ######## PARSED RULES #######

 RULE : Diels-Alder reaction


 == LEFT_SIDE_PATTERN ==

     0 (C)  -->  | 5 (=) |
     1 (C)  -->  | 2 (=) |
     2 (C)  -->  | 1 (=) |
     3 (C)  -->  | 4 (=) |
     4 (C)  -->  | 3 (=) | 5 (-) |
     5 (C)  -->  | 0 (=) | 4 (-) |

 number of constraints = 4
 + MC_NoEdge 
   from 0
   to   2
 + MC_NoEdge 
   from 3
   to   1
 + MC_NoEdge 
   from 0
   to   1
 + MC_NoEdge 
   from 2
   to   3

 == RIGHT_SIDE_PATTERN ==

     0 (C)  -->  | 1 (-) | 5 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |

 number of nodes with copy-and-paste operations = 0



 transition state of Diels-Alder reaction = [C:1]1=[C:1][C:1]=[C:1]=[C:1]=[C:1]1

 ###### PARSED MOLECULES #####

 C=C
 C=CC=C


 0. iteration done : molecules = 2

 new molecules :
 C=C
 C=CC=C


 1. iteration done : molecules = 4

 new molecules :
 C1CCC=CC1
 C=CC1CCC=CC1


 2. iteration done : molecules = 7

 new molecules :
 C1CCC2CC=CCC2C1
 C=CC1CCC2CC=CCC2C1
 C1CC(CC=C1)C2CCC=CC2




 ######## FINAL SMILES ######


 number of produced reactions = 5

 Produced Reactions :

Diels-Alder reaction : C1CCC=CC1.C=CC=C>>C1CCC2CC=CCC2C1 : 1.7037
Diels-Alder reaction : C=C.C=CC=C>>C1CCC=CC1 : 1.56205
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>>C1CC(CC=C1)C2CCC=CC2 : 1.70131
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>>C=CC1CCC2CC=CCC2C1 : 1.7037
Diels-Alder reaction : C=CC=C.C=CC=C>>C=CC1CCC=CC1 : 1.54496

 --> running Diels-Alder reaction
 --> parameter =  -mols=dielsalder/da1.gml:dielsalder/da2.gml -rules=dielsalder/da_rule.gml -iter=2 -outMode=N -rate=A -v

 # LOAD AROMATICITY MODELS ... DONE

 # PARSE RULES ... DONE

 # CHECK RULES ... DONE

 # PARSE INPUT ... DONE

 # CORRECT INPUT ... DONE

 # CHECK INPUT ... DONE

 ######## PARSED AND AVAILABLE GROUPS #######

 ######## PARSED RULES #######

 RULE : Diels-Alder reaction


 == LEFT_SIDE_PATTERN ==

     0 (C)  -->  | 5 (=) |
     1 (C)  -->  | 2 (=) |
     2 (C)  -->  | 1 (=) |
     3 (C)  -->  | 4 (=) |
     4 (C)  -->  | 3 (=) | 5 (-) |
     5 (C)  -->  | 0 (=) | 4 (-) |

 number of constraints = 4
 + MC_NoEdge 
   from 0
   to   2
 + MC_NoEdge 
   from 3
   to   1
 + MC_NoEdge 
   from 0
   to   1
 + MC_NoEdge 
   from 2
   to   3

 == RIGHT_SIDE_PATTERN ==

     0 (C)  -->  | 1 (-) | 5 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |

 number of nodes with copy-and-paste operations = 0



 transition state of Diels-Alder reaction = [C:1]1=[C:1][C:1]=[C:1]=[C:1]=[C:1]1

 ###### PARSED MOLECULES #####

 C=C
 C=CC=C


 0. iteration done : molecules = 2

 new molecules :
 C=C
 C=CC=C


 1. iteration done : molecules = 4

 new molecules :
 C1CCC=CC1
 C=CC1CCC=CC1


 2. iteration done : molecules = 7

 new molecules :
 C1CCC2CC=CCC2C1
 C=CC1CCC2CC=CCC2C1
 C1CC(CC=C1)C2CCC=CC2




 ######## FINAL SMILES ######


 number of produced reactions = 5

 Produced Reactions :

Diels-Alder reaction : C1CCC=CC1.C=CC=C>>C1CCC2CC=CCC2C1 : 1.7037
Diels-Alder reaction : C=C.C=CC=C>>C1CCC=CC1 : 1.56205
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>>C1CC(CC=C1)C2CCC=CC2 : 1.70131
Diels-Alder reaction : C=CC1CCC=CC1.C=CC=C>>C=CC1CCC2CC=CCC2C1 : 1.7037
Diels-Alder reaction : C=CC=C.C=CC=C>>C=CC1CCC=CC1 : 1.54496


digraph reactionNetwork {
  M5 [shape=oval label="C1CC(CC=C1)C2CCC=CC2"];
  M2 [shape=oval label="C1CCC2CC=CCC2C1"];
  M0 [shape=oval label="C1CCC=CC1"];
  M3 [shape=oval label="C=C"];
  M6 [shape=oval label="C=CC1CCC2CC=CCC2C1"];
  M4 [shape=oval label="C=CC1CCC=CC1"];
  M1 [shape=oval label="C=CC=C"];
  R0 [shape=box label="R0 1.7037"]; // Diels-Alder reaction;
  M0 -> R0;
  M1 -> R0;
  R0 -> M2;
  R1 [shape=box label="R0 1.56205"]; // Diels-Alder reaction;
  M3 -> R1;
  M1 -> R1;
  R1 -> M0;
  R2 [shape=box label="R0 1.70131"]; // Diels-Alder reaction;
  M4 -> R2;
  M1 -> R2;
  R2 -> M5;
  R3 [shape=box label="R0 1.7037"]; // Diels-Alder reaction;
  M4 -> R3;
  M1 -> R3;
  R3 -> M6;
  R4 [shape=box label="R0 1.54496"]; // Diels-Alder reaction;
  M1 -> R4;
  M1 -> R4;
  R4 -> M4;
} // visualization: eg. 'dot -Tpng -O GRAPHOUTPUTFILE'

 --> running Diels-Alder reaction
 --> parameter =  -mols=dielsalder/da1.gml:dielsalder/da2.gml -rules=dielsalder/da_rule.gml -iter=2 -outMode=S -v

 # LOAD AROMATICITY MODELS ... DONE

 # PARSE RULES ... DONE

 # CHECK RULES ... DONE

 # PARSE INPUT ... DONE

 # CORRECT INPUT ... DONE

 # CHECK INPUT ... DONE

 ######## PARSED AND AVAILABLE GROUPS #######

 ######## PARSED RULES #######

 RULE : Diels-Alder reaction


 == LEFT_SIDE_PATTERN ==

     0 (C)  -->  | 5 (=) |
     1 (C)  -->  | 2 (=) |
     2 (C)  -->  | 1 (=) |
     3 (C)  -->  | 4 (=) |
     4 (C)  -->  | 3 (=) | 5 (-) |
     5 (C)  -->  | 0 (=) | 4 (-) |

 number of constraints = 4
 + MC_NoEdge 
   from 0
   to   2
 + MC_NoEdge 
   from 3
   to   1
 + MC_NoEdge 
   from 0
   to   1
 + MC_NoEdge 
   from 2
   to   3

 == RIGHT_SIDE_PATTERN ==

     0 (C)  -->  | 1 (-) | 5 (-) |
     1 (C)  -->  | 0 (-) | 2 (-) |
     2 (C)  -->  | 1 (-) | 3 (-) |
     3 (C)  -->  | 2 (-) | 4 (-) |
     4 (C)  -->  | 3 (-) | 5 (=) |
     5 (C)  -->  | 4 (=) | 0 (-) |

 number of nodes with copy-and-paste operations = 0



 transition state of Diels-Alder reaction = [C:1]1=[C:1][C:1]=[C:1]=[C:1]=[C:1]1

 ###### PARSED MOLECULES #####

 C=C
 C=CC=C


 0. iteration done : molecules = 2

 new molecules :
 C=C
 C=CC=C

 iteration 1 : apply reaction 'Diels-Alder reaction' : 2

 1. iteration done : molecules = 4

 new molecules :
 C1CCC=CC1
 C=CC1CCC=CC1

 iteration 2 : apply reaction 'Diels-Alder reaction' : 3

 2. iteration done : molecules = 7

 new molecules :
 C1CCC2CC=CCC2C1
 C=CC1CCC2CC=CCC2C1
 C1CC(CC=C1)C2CCC=CC2




 ######## FINAL SMILES ######

 C=C
 C=CC=C
 C1CCC=CC1
 C=CC1CCC=CC1
 C1CCC2CC=CCC2C1
 C=CC1CCC2CC=CCC2C1
 C1CC(CC=C1)C2CCC=CC2

 --> running Lactat-dehydrogenase reaction
 --> parameter =  -smiles=toyChem/NADH.smi:toyChem/lactat.smi -groups=toyChem/groups.gml -rules=toyChem/lactat-dehydrogenase.gml -iter=1

 0. iteration done : molecules = 3

 1. iteration done : molecules = 5

 [H+]
 CC(O)C([O-])=O
 CC(=O)C([O-])=O
 NC(=O)C1CC=CN(C=1)C2OC(COP(O)(=O)OP(O)(=O)OCC3OC(C(O)C3O)n4cnc5c(N)ncnc54)C(O)C2O
 NC(=O)c1ccc[n+](c1)C2OC(COP(O)(=O)OP(O)(=O)OCC3OC(C(O)C3O)n4cnc5c(N)ncnc54)C(O)C2O


===============  END TEST  ===================
