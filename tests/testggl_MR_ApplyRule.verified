
==============  BEGIN TEST  ==================
==============================================
             ggl::MR_ApplyRule  
==============================================


================  CREATE RULE  ==================

-->create Rule = getRule_1()



=============================================

  0(A) -1- 1(B)               0(E) -1- 1(B)
   |                           |        |
   2               ==>         4        3
   |                           |        |
  2(C)                        2(C)     3(D)

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,0) (1,1) (2,3)
     2 : (0,2) (1,1) (2,4)

=================================================

 results :

     0 (E)  -->  | 1 (-1-) | 2 (-4-) |
     1 (B)  -->  | 0 (-1-) | 3 (-1-) | 4 (-2-) | 5 (-3-) |
     2 (C)  -->  | 4 (-1-) | 0 (-4-) |
     3 (A)  -->  | 1 (-1-) | 4 (-2-) |
     4 (C)  -->  | 1 (-2-) | 3 (-2-) | 2 (-1-) |
     5 (D)  -->  | 1 (-3-) |

     0 (E)  -->  | 1 (-1-) | 2 (-4-) |
     1 (B)  -->  | 0 (-1-) | 2 (-2-) | 3 (-1-) | 5 (-3-) |
     2 (C)  -->  | 1 (-2-) | 4 (-1-) | 0 (-4-) |
     3 (A)  -->  | 1 (-1-) | 4 (-2-) |
     4 (C)  -->  | 3 (-2-) | 2 (-1-) |
     5 (D)  -->  | 1 (-3-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_2()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :


=================================================

 results :


=================================================


================  CREATE RULE  ==================

-->create Rule = getRule_1()


=============================================

  0(*) -1- 1(B)               0(*) -1- 1(E)
   |                           |        |
   2               ==>         4        3
   |                           |        |
  2(C)                        2(C)     3(D)

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :


=================================================

 results :


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using WILDCARD = '*'

 matches :

     1 : (0,0) (1,1) (2,3)
     2 : (0,2) (1,1) (2,4)

=================================================

 results :

     0 (A)  -->  | 1 (-1-) | 2 (-4-) |
     1 (E)  -->  | 0 (-1-) | 3 (-1-) | 4 (-2-) | 5 (-3-) |
     2 (C)  -->  | 4 (-1-) | 0 (-4-) |
     3 (A)  -->  | 1 (-1-) | 4 (-2-) |
     4 (C)  -->  | 1 (-2-) | 3 (-2-) | 2 (-1-) |
     5 (D)  -->  | 1 (-3-) |

     0 (A)  -->  | 1 (-1-) | 2 (-4-) |
     1 (E)  -->  | 0 (-1-) | 2 (-2-) | 3 (-1-) | 5 (-3-) |
     2 (C)  -->  | 1 (-2-) | 4 (-1-) | 0 (-4-) |
     3 (A)  -->  | 1 (-1-) | 4 (-2-) |
     4 (C)  -->  | 3 (-2-) | 2 (-1-) |
     5 (D)  -->  | 1 (-3-) |


=================================================


================  CREATE RULE  ==================

-->create RuleConstraints:

 RC( node(2), =, 0, 'B' )

-->create Rule = getRule_1()


=============================================

  0(A) -1- 1(B)               0(E) -1- 1(B)
   |                           |        |
   2               ==>         4        3
   |                           |        |
  2(C)                        2(C)     3(D)

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,0) (1,1) (2,3)

=================================================

 results :

     0 (E)  -->  | 1 (-1-) | 2 (-4-) |
     1 (B)  -->  | 0 (-1-) | 3 (-1-) | 4 (-2-) | 5 (-3-) |
     2 (C)  -->  | 4 (-1-) | 0 (-4-) |
     3 (A)  -->  | 1 (-1-) | 4 (-2-) |
     4 (C)  -->  | 1 (-2-) | 3 (-2-) | 2 (-1-) |
     5 (D)  -->  | 1 (-3-) |


=================================================


================  CREATE RULE  ==================

-->create Rule = getRule_2()


=============================================

  3(D) -1- 1(B)               3(E) -1- 1(B) 
   |      /                    |        |   
   2    3           ==>        4        3   
   |  /                        |        |   
  2(C) -0- 0(A)               2(C)     4(D) 

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :


=================================================

 results :


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_2()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,5) (1,0) (2,4) (3,1)
     2 : (0,5) (1,2) (2,4) (3,1)

=================================================

 results :

     0 (B)  -->  | 2 (-1-) | 4 (-2-) | 5 (-3-) |
     1 (C)  -->  | 3 (-3-) | 4 (-1-) | 2 (-4-) |
     2 (E)  -->  | 0 (-1-) | 3 (-1-) | 1 (-4-) |
     3 (B)  -->  | 2 (-1-) | 1 (-3-) |
     4 (C)  -->  | 0 (-2-) | 1 (-1-) |
     5 (D)  -->  | 0 (-3-) |

     0 (B)  -->  | 2 (-1-) | 5 (-3-) |
     1 (C)  -->  | 3 (-3-) | 4 (-1-) | 2 (-4-) |
     2 (E)  -->  | 0 (-1-) | 3 (-1-) | 1 (-4-) |
     3 (B)  -->  | 2 (-1-) | 1 (-3-) | 4 (-2-) |
     4 (C)  -->  | 3 (-2-) | 1 (-1-) |
     5 (D)  -->  | 0 (-3-) |


=================================================


================  CREATE RULE  ==================

-->create RuleConstraints:

 RC( node(1), <, 3, any, any )

-->create Rule = getRule_2()


=============================================

  3(D) -1- 1(B)               3(E) -1- 1(B) 
   |      /                    |        |   
   2    3           ==>        4        3   
   |  /                        |        |   
  2(C) -0- 0(A)               2(C)     4(D) 

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_2()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,5) (1,2) (2,4) (3,1)

=================================================

 results :

     0 (B)  -->  | 2 (-1-) | 5 (-3-) |
     1 (C)  -->  | 3 (-3-) | 4 (-1-) | 2 (-4-) |
     2 (E)  -->  | 0 (-1-) | 3 (-1-) | 1 (-4-) |
     3 (B)  -->  | 2 (-1-) | 1 (-3-) | 4 (-2-) |
     4 (C)  -->  | 3 (-2-) | 1 (-1-) |
     5 (D)  -->  | 0 (-3-) |


=================================================


================  CREATE RULE  ==================

-->create RuleConstraints:

 RC( node(2), >, 0, any, '-2-' )

-->create Rule = getRule_2()


=============================================

  3(D) -1- 1(B)               3(E) -1- 1(B) 
   |      /                    |        |   
   2    3           ==>        4        3   
   |  /                        |        |   
  2(C) -0- 0(A)               2(C)     4(D) 

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_2()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,5) (1,0) (2,4) (3,1)

=================================================

 results :

     0 (B)  -->  | 2 (-1-) | 4 (-2-) | 5 (-3-) |
     1 (C)  -->  | 3 (-3-) | 4 (-1-) | 2 (-4-) |
     2 (E)  -->  | 0 (-1-) | 3 (-1-) | 1 (-4-) |
     3 (B)  -->  | 2 (-1-) | 1 (-3-) |
     4 (C)  -->  | 0 (-2-) | 1 (-1-) |
     5 (D)  -->  | 0 (-3-) |


=================================================


================  CREATE RULE  ==================

-->create Rule = getRule_3()


=============================================

  2(D) -1- 1(B)               2(C)     1(B) 
                                        |   
                    ==>                 3   
                                        |   
           0(A)                        0(A) 

=============================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_1()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :


=================================================

 results :


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_2()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,5) (1,0) (2,1)
     2 : (0,5) (1,2) (2,1)

=================================================

 results :

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 5 (-2-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 1 (-3-) | 2 (-2-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) |
     5 (C)  -->  | 1 (-2-) | 3 (-1-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 2 (-2-) | 1 (-3-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 3 (-1-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_3()


=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      / |  
   2   3    2    3   1  
   |     \  |  /     |  
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (B)  -->  | 1 (-1-) | 3 (-2-) | 4 (-3-) |
     1 (D)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (B)  -->  | 1 (-1-) | 4 (-3-) | 5 (-1-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 0 (-3-) | 1 (-2-) | 2 (-3-) | 3 (-1-) | 5 (-0-) |
     5 (A)  -->  | 2 (-1-) | 4 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,5) (1,0) (2,1)
     2 : (0,5) (1,2) (2,1)

=================================================

 results :

     0 (A)  -->  | 3 (-1-) | 5 (-0-) | 1 (-3-) |
     1 (B)  -->  | 4 (-2-) | 5 (-3-) | 0 (-3-) |
     2 (C)  -->  | 3 (-1-) | 5 (-2-) |
     3 (B)  -->  | 2 (-1-) | 0 (-1-) | 5 (-3-) |
     4 (C)  -->  | 1 (-2-) | 5 (-1-) |
     5 (C)  -->  | 1 (-3-) | 2 (-2-) | 3 (-3-) | 4 (-1-) | 0 (-0-) |

     0 (A)  -->  | 1 (-1-) | 5 (-0-) | 1 (-3-) |
     1 (B)  -->  | 0 (-1-) | 5 (-3-) | 0 (-3-) |
     2 (C)  -->  | 3 (-1-) | 5 (-2-) |
     3 (B)  -->  | 2 (-1-) | 4 (-2-) | 5 (-3-) |
     4 (C)  -->  | 3 (-2-) | 5 (-1-) |
     5 (C)  -->  | 3 (-3-) | 2 (-2-) | 1 (-3-) | 4 (-1-) | 0 (-0-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_*()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |
     5 (B)  -->  | 6 (-1-) | 8 (-2-) | 9 (-3-) |
     6 (D)  -->  | 5 (-1-) | 7 (-1-) | 9 (-2-) |
     7 (B)  -->  | 6 (-1-) | 9 (-3-) |
     8 (C)  -->  | 5 (-2-) | 9 (-1-) |
     9 (C)  -->  | 5 (-3-) | 6 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,0) (1,5) (2,6)
     2 : (0,0) (1,7) (2,6)
     3 : (0,2) (1,5) (2,6)
     4 : (0,2) (1,7) (2,6)
     5 : (0,10) (1,5) (2,6)
     6 : (0,10) (1,7) (2,6)

=================================================

 results :

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 5 (-2-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 1 (-3-) | 2 (-2-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) |
     5 (C)  -->  | 1 (-2-) | 3 (-1-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 2 (-2-) | 1 (-3-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 3 (-1-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_*()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |
     5 (B)  -->  | 6 (-1-) | 8 (-2-) | 9 (-3-) |
     6 (D)  -->  | 5 (-1-) | 7 (-1-) | 9 (-2-) |
     7 (B)  -->  | 6 (-1-) | 9 (-3-) |
     8 (C)  -->  | 5 (-2-) | 9 (-1-) |
     9 (C)  -->  | 5 (-3-) | 6 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

================= MATCHING ======================

 using NO WILDCARD

 matches :

     1 : (0,0) (1,5) (2,6)
     2 : (0,0) (1,7) (2,6)
     3 : (0,2) (1,5) (2,6)
     4 : (0,2) (1,7) (2,6)
     5 : (0,10) (1,5) (2,6)
     6 : (0,10) (1,7) (2,6)

=================================================

 results :

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 9 (-2-) | 10 (-3-) | 0 (-3-) |
     2 (C)  -->  | 8 (-1-) | 10 (-2-) |
     3 (C)  -->  | 0 (-0-) | 4 (-3-) | 5 (-2-) | 6 (-3-) | 7 (-1-) |
     4 (B)  -->  | 3 (-3-) | 5 (-1-) | 7 (-2-) |
     5 (D)  -->  | 4 (-1-) | 3 (-2-) | 6 (-1-) |
     6 (B)  -->  | 5 (-1-) | 3 (-3-) |
     7 (C)  -->  | 4 (-2-) | 3 (-1-) |
     8 (B)  -->  | 2 (-1-) | 10 (-3-) |
     9 (C)  -->  | 1 (-2-) | 10 (-1-) |
    10 (C)  -->  | 1 (-3-) | 2 (-2-) | 8 (-3-) | 9 (-1-) | 11 (-0-) |
    11 (A)  -->  | 10 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 10 (-3-) | 0 (-3-) |
     2 (C)  -->  | 8 (-1-) | 10 (-2-) |
     3 (C)  -->  | 0 (-0-) | 4 (-3-) | 5 (-2-) | 6 (-3-) | 7 (-1-) |
     4 (B)  -->  | 3 (-3-) | 5 (-1-) | 7 (-2-) |
     5 (D)  -->  | 4 (-1-) | 3 (-2-) | 6 (-1-) |
     6 (B)  -->  | 5 (-1-) | 3 (-3-) |
     7 (C)  -->  | 4 (-2-) | 3 (-1-) |
     8 (B)  -->  | 2 (-1-) | 9 (-2-) | 10 (-3-) |
     9 (C)  -->  | 8 (-2-) | 10 (-1-) |
    10 (C)  -->  | 8 (-3-) | 2 (-2-) | 1 (-3-) | 9 (-1-) | 11 (-0-) |
    11 (A)  -->  | 10 (-0-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_*()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |
     5 (B)  -->  | 6 (-1-) | 8 (-2-) | 9 (-3-) |
     6 (D)  -->  | 5 (-1-) | 7 (-1-) | 9 (-2-) |
     7 (B)  -->  | 6 (-1-) | 9 (-3-) |
     8 (C)  -->  | 5 (-2-) | 9 (-1-) |
     9 (C)  -->  | 5 (-3-) | 6 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

================= MATCHING ======================

 matches :

     1 : (0,0) (1,5) (2,6)
     2 : (0,0) (1,7) (2,6)
     3 : (0,2) (1,5) (2,6)
     4 : (0,2) (1,7) (2,6)
     5 : (0,10) (1,5) (2,6)
     6 : (0,10) (1,7) (2,6)

=================================================

 addEachComponent  : false

 results :

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 5 (-2-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 1 (-3-) | 2 (-2-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) |
     5 (C)  -->  | 1 (-2-) | 3 (-1-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 3 (-3-) | 0 (-3-) |
     2 (C)  -->  | 3 (-2-) | 4 (-1-) |
     3 (C)  -->  | 2 (-2-) | 1 (-3-) | 0 (-0-) | 4 (-3-) | 5 (-1-) |
     4 (B)  -->  | 2 (-1-) | 3 (-3-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 3 (-1-) |


=================================================


============  CREATE TARGET GRAPH  ==============

-->create Target = getTarget_*()


=============================================

  0(A) -1- 1(B) -1- 2(A)
   |        |      /    
   2        2    2      
   |        |  /        
  3(C) -1- 4(C)         

=============================================

=============================================

  0(B) -1- 1(D) -1- 2(B) 
   | \      |      /     
   2   3    2    3       
   |     \  |  /         
  3(C) -1- 4(C) -0- 5(A) 

=============================================

     0 (A)  -->  | 1 (-1-) | 3 (-2-) |
     1 (B)  -->  | 0 (-1-) | 2 (-1-) | 4 (-2-) |
     2 (A)  -->  | 1 (-1-) | 4 (-2-) |
     3 (C)  -->  | 0 (-2-) | 4 (-1-) |
     4 (C)  -->  | 1 (-2-) | 2 (-2-) | 3 (-1-) |
     5 (B)  -->  | 6 (-1-) | 8 (-2-) | 9 (-3-) |
     6 (D)  -->  | 5 (-1-) | 7 (-1-) | 9 (-2-) |
     7 (B)  -->  | 6 (-1-) | 9 (-3-) |
     8 (C)  -->  | 5 (-2-) | 9 (-1-) |
     9 (C)  -->  | 5 (-3-) | 6 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

================= MATCHING ======================

 matches :

     1 : (0,0) (1,5) (2,6)
     2 : (0,0) (1,7) (2,6)
     3 : (0,2) (1,5) (2,6)
     4 : (0,2) (1,7) (2,6)
     5 : (0,10) (1,5) (2,6)
     6 : (0,10) (1,7) (2,6)

=================================================

 addEachComponent  : true

 results :

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 5 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 6 (-2-) |
     5 (C)  -->  | 0 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 4 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 8 (-2-) | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 9 (-3-) |
     8 (C)  -->  | 1 (-2-) | 9 (-1-) |
     9 (C)  -->  | 1 (-3-) | 2 (-2-) | 7 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-1-) | 6 (-2-) | 1 (-3-) |
     1 (B)  -->  | 9 (-3-) | 0 (-3-) |
     2 (C)  -->  | 7 (-1-) | 9 (-2-) |
     3 (B)  -->  | 0 (-1-) | 4 (-1-) | 6 (-2-) |
     4 (A)  -->  | 3 (-1-) | 5 (-2-) |
     5 (C)  -->  | 4 (-2-) | 6 (-1-) |
     6 (C)  -->  | 3 (-2-) | 0 (-2-) | 5 (-1-) |
     7 (B)  -->  | 2 (-1-) | 8 (-2-) | 9 (-3-) |
     8 (C)  -->  | 7 (-2-) | 9 (-1-) |
     9 (C)  -->  | 7 (-3-) | 2 (-2-) | 1 (-3-) | 8 (-1-) | 10 (-0-) |
    10 (A)  -->  | 9 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 9 (-2-) | 10 (-3-) | 0 (-3-) |
     2 (C)  -->  | 8 (-1-) | 10 (-2-) |
     3 (C)  -->  | 0 (-0-) | 4 (-3-) | 5 (-2-) | 6 (-3-) | 7 (-1-) |
     4 (B)  -->  | 3 (-3-) | 5 (-1-) | 7 (-2-) |
     5 (D)  -->  | 4 (-1-) | 3 (-2-) | 6 (-1-) |
     6 (B)  -->  | 5 (-1-) | 3 (-3-) |
     7 (C)  -->  | 4 (-2-) | 3 (-1-) |
     8 (B)  -->  | 2 (-1-) | 10 (-3-) |
     9 (C)  -->  | 1 (-2-) | 10 (-1-) |
    10 (C)  -->  | 1 (-3-) | 2 (-2-) | 8 (-3-) | 9 (-1-) | 11 (-0-) |
    11 (A)  -->  | 10 (-0-) |

     0 (A)  -->  | 3 (-0-) | 1 (-3-) |
     1 (B)  -->  | 10 (-3-) | 0 (-3-) |
     2 (C)  -->  | 8 (-1-) | 10 (-2-) |
     3 (C)  -->  | 0 (-0-) | 4 (-3-) | 5 (-2-) | 6 (-3-) | 7 (-1-) |
     4 (B)  -->  | 3 (-3-) | 5 (-1-) | 7 (-2-) |
     5 (D)  -->  | 4 (-1-) | 3 (-2-) | 6 (-1-) |
     6 (B)  -->  | 5 (-1-) | 3 (-3-) |
     7 (C)  -->  | 4 (-2-) | 3 (-1-) |
     8 (B)  -->  | 2 (-1-) | 9 (-2-) | 10 (-3-) |
     9 (C)  -->  | 8 (-2-) | 10 (-1-) |
    10 (C)  -->  | 8 (-3-) | 2 (-2-) | 1 (-3-) | 9 (-1-) | 11 (-0-) |
    11 (A)  -->  | 10 (-0-) |


=================================================


===============  TEST END  ===================
==============================================

